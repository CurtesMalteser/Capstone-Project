apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.curtesmalteser.pingpoinz"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        resValue("string", "MAPS_KEY", MAPS_KEY)
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

ext {
    supportLibraryVersion = '27.1.1'
    constraintLayoutVersion = '1.1.2'
    // daggerVersion = '2.15'
    butterKnifeVersion = '8.8.1'
    // rxJavaVersion = '2.1.16'
    // rxAndroidVersion = '2.0.2'
    timberVersion = '4.7.1'
    lifecycleVersion = '1.1.1'
    //roomVersion = '1.1.1'
    playServicesVersion = '15.0.1'
    autoValueVersion = '1.6.2'

    picassoVersion = '2.5.2'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // Dagger core
    /* annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
     implementation "com.google.dagger:dagger:$daggerVersion"*/

    // Dagger Android
    /* annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
     implementation "com.google.dagger:dagger-android-support:$daggerVersion"*/

    // if you are not using support library, include this instead
    // implementation "com.google.dagger:dagger-android:$daggerVersion"

    // ButterKnife
    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    // ReactiveX
    /*implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"*/

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Lifecycle
    implementation "android.arch.lifecycle:runtime:$lifecycleVersion"
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycleVersion"

    // Room
    // implementation "android.arch.persistence.room:runtime:$roomVersion"
    //annotationProcessor "android.arch.persistence.room:compiler:$roomVersion"

    // Maps

    implementation "com.google.android.gms:play-services-location:$playServicesVersion"
    implementation "com.google.android.gms:play-services-maps:$playServicesVersion"
    implementation "com.google.android.gms:play-services-places:$playServicesVersion"

    implementation "com.google.auto.value:auto-value-annotations:$autoValueVersion"
    annotationProcessor "com.google.auto.value:auto-value:$autoValueVersion"
}
